ARCH = i386
CC = ./toolchain/compiler/bin/i686-elf-gcc
LD = $(CC)
AS = nasm
ISO_FILE = PlatypusOS.iso
FLOPPY_FILE = floppy.img
KERNEL_FILE = kernel.elf
INITRD_FILE = initrd.img
INCLUDE = -I$(PWD) -I./kernel/ -I./kernel/drivers/ -I./kernel/fs/ -I./kernel/include/ -I./user/

CFLAGS = -Wno-attributes -Wno-discarded-qualifiers -Wno-int-conversion -ffreestanding $(INCLUDE)
ASFLAGS = -f elf32
LDFLAGS = -T./kernel/arch/$(ARCH)/linker.ld -ffreestanding -O2 -nostdlib

C_SOURCES = $(shell find init/ kernel/ lib/ user/ -name '*.c')
ASM_SOURCES = $(shell find kernel/ -name '*.asm')
OBJ_FILES = $(C_SOURCES:.c=.o) $(ASM_SOURCES:.asm=.o)

$(ISO_FILE): $(KERNEL_FILE)
	# @gcc -o ./scripts/gen_initrd ./scripts/gen_initrd.c
	# @./scripts/gen_initrd initrd/file.txt file.txt initrd/file2.txt file2.txt
	@dd if=/dev/zero of=$(FLOPPY_FILE) bs=512 count=2880
	@mkdir -p isodir/boot/grub/
	@cp grub.cfg isodir/boot/grub/
	@cp $(KERNEL_FILE) isodir/boot/
	@grub-mkrescue -o $(ISO_FILE) isodir

$(KERNEL_FILE): kernel/arch/$(ARCH)/boot.o $(OBJ_FILES)
	@echo "LD $@"
	@$(LD) $(LDFLAGS) $^ -o $@

%.o: %.c
	@echo "CC $<"
	@$(CC) $(CFLAGS) -c $< -o $@

%.o: %.asm
	@echo "AS $<"
	@$(AS) $(ASFLAGS) $< -o $@

clean:
	@rm -rf isodir/ $(KERNEL_FILE) $(INITRD_FILE) $(ISO_FILE) $(FLOPPY_FILE) $(OBJ_FILES)
